@model Sanitario.Models.Vendita

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Vendita</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="row row-cols-2">
                <div class="col">

                <div class="form-group">
                    <label asp-for="IdCliente" class="control-label"></label>
                    <select id="selectedCliente" asp-for="IdCliente" class="form-control" asp-items="ViewBag.IdCliente">
                        <option>-- Seleziona utente --</option>
                    </select>
                </div>
                <div class="form-group">
                    <label class="control-label">Visite</label>
                    <select id="selectedVisite" class="form-control">
                        <option>-- Seleziona visita --</option>
                    </select>
                </div>
                <div class="form-group">
                    <input type="hidden" name="idVisita" id="idVisita" value="" />
                    <input type="hidden" name="idCura" id="idCura" value="" />
                </div>
                <div id="curePrescritte">
                </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        <label class="control-label">Acquista altri prodotti</label>
                        <select id="products" class="form-control" asp-items="ViewBag.Products">
                            <option>-- Seleziona prodotto --</option>
                        </select>
                        
                           @*  @{
                                if (ViewData["Session"] != null)
                                {
                                    <div id="productsDiv">
                                    foreach (var product in ViewData["Session"] as List<Prodotto>)
                                    {
                                        <p>@product.nome - @product.prezzo €</p>
                                        <button data-product-id="@product.idProdotto" type="button" class="remove-product">Rimuovi</button>
                                    }
                                    </div>
                                } else {
                                <div id="productsDiv"></div>
                                }
                            } *@
                            
                            
                        
                        <input type="hidden" id="productsListInput" name="productsList" value="" />
                    </div>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', async function () {

            document.getElementById('selectedCliente').addEventListener('change', async function () {
                $('#curePrescritte').empty();
                var idCliente = this.value;
                console.log("IdCliente: ", idCliente);
                try {
                    const response = await fetch('/Vendita/GetVisite?idCliente=' + idCliente);
                    if (!response.ok) {
                        throw new Error('HTTP error! status: ' + response.status);
                    }
                    const data = await response.json();
                    console.log("myData: ", data)
                    // Rimuove tutte le opzioni esistenti
                    $('#selectedVisite').empty();
                    $('#selectedVisite').append($('<option>', {
                        text: "--Seleziona visita --"
                    }));
                    // Aggiunge le nuove opzioni
                    data.listaVisite.forEach(function (visita) {
                        $('#selectedVisite').append($('<option>', {
                            value: visita.id, // Valore dell'opzione (id della visita)
                            text: visita.nomeAnimale + " (" + visita.esame + " - " + visita.data + ")" // Testo dell'opzione (nome della visita)
                        }));
                    });
                } catch (error) {
                    console.error('Error fetching data:', error);
                }
            });
            document.getElementById('selectedVisite').addEventListener('change', async function () {
                var idVisita = this.value;
                document.getElementById("idVisita").value = idVisita;
                try {
                    const response = await fetch('/Vendita/GetCure?idVisita=' + idVisita);
                    if (!response.ok) {
                        throw new Error('HTTP error! status: ' + response.status);
                    }
                    const data = await response.json();
                    console.log(data)
                    // Rimuove tutte le opzioni esistenti
                    $('#curePrescritte').empty();

                    // Aggiunge le nuove opzioni
                    data.listaCure.forEach(function (cura) {
                        $('#curePrescritte').append($('<p>', {
                            text: cura.prodotto.nome + " " + cura.prodotto.prezzo + "€" // Testo dell'opzione (nome della visita)
                        }));
                    });
                } catch (error) {
                    console.error('Error fetching data:', error);
                }
            })

            $("#products").change(async function () {
                var idProduct = this.value;
                var textProduct = $(this).find('option:selected').text();
                try {
                    const response = await fetch('/Vendita/AddProductToSession?idProdotto=' + idProduct, {
                        method: 'POST' // Specifica il metodo come 'POST'
                    });
                    if (!response.ok) {
                        throw new Error('HTTP error! status: ' + response.status);
                    }
                    const data = await response.json();
                    console.log(data)
                    // Rimuove tutte le opzioni esistenti
                    $('#productsDiv').empty();

                    // Aggiunge le nuove opzioni
                    data.list.forEach(function (product) {
                        $('#productsDiv').append($(`<p>${product.nome} - ${product.prezzo}</p><button data-product-id="${product.idProdotto}" type="button" class="remove-product">Rimuovi</button>`));
                    });
                } catch (error) {
                    console.error('Error fetching data:', error);
                }
            })


            $("#productsDiv").on('click', '.remove-product', async function (event) {
                var idProduct = $(this).data('product-id');

                try {
                    const response = await fetch('/Vendita/RemoveProductFromSession?idProdotto=' + idProduct, {
                        method: 'POST' // Specifica il metodo come 'POST'
                    });
                    if (!response.ok) {
                        throw new Error('HTTP error! status: ' + response.status);
                    }
                    const data = await response.json();
                    console.log(data)

                    // Aggiorna il contenuto di #productsDiv con i nuovi dati ricevuti dalla risposta
                    $('#productsDiv').html('');
                    data.list.forEach(function (product) {
                        $('#productsDiv').append($(`<p>${product.nome} - ${product.prezzo}</p><button data-product-id="${product.idProdotto}" type="button" class="remove-product">Rimuovi</button>`));
                    });

                } catch (error) {
                    console.error('Error fetching data:', error);
                }
            });
        });
    </script>
}

